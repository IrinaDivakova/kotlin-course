package org.example.`kotlin-course`.lesson.lesson03.homework

class Homework {
//    1. Название мероприятия (неизменяемая публичная переменная известная заранее)
    val name: String = "Hackathon Survival"
//    2. Дата проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
    var date: String = "10 ноября 2025"
//    3. Место проведения (неизменяемая публичная переменная известная на момент написания, изменению не поджлежит, т.к. участники заранее планирую поездку)
    val place : String = "The Phillipins"
//   4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы. (неизменяемая приватная переменная)
    private val budget: String = "suppliers, sums, contact information"
//    5. Количество участников (изменяемая переменная заранее неизвестно)
    var participantsCounter: Int = 0
//    6. Длительность хакатона (неизменяемая публичная переменная, известная заранее)
    val duration: String = "3 days"
//    7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг. (неизменяемая private, известна заранее, от неё зависит бюжет)
    private val suppliers: String = "names, number, text"
//    8. Текущее состояние хакатона (статус) (изменяемая публичная переменная)
    var status: String = "preparation"
//    9. Список спонсоров (изменяемая публичная переменная, могут добавляться в процессе )
    var sponsorship: String = "list of sponsors"
//    10. Бюджет мероприятия (изменяемая приватная переменная, зависит от количество участников и спонсоров)
    private var totalBudget: Double = 4524.58
//    11. Текущий уровень доступа к интернету (изменяемая публичная переменная)
    var internetAccessLevel: String = "Low"
//  12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки (изменяемая приватная переменная, до конца неизвестная, может меняться в процессе)
    private var logisticInformation: String = "all information"
//    13. Количество команд (изменяемая публичная переменная, есть первоначальное планируемое значение, должны быть геттеры и сеттеры и зависит от количества участнико: в команде 10 человек общее количество/10, проверить остаток и тогда рассчитать количество команд )
    var numberOfTeams: Int = 2
//    14. Перечень задач (изменяемая публичная переменная, известна заранее, но может поменяться)
    var taskLsist: String = "list of tasks"
//  15. План эвакуации (неизменяемая публичная известная заранее, но только на время мероприятия)
    val avacuationPlan: String = "Plan with pict"
//    16. Список доступного оборудования (всё, что выделено для использования на мероприятии) (неизменяемая публичная, известна заранее)
    val equipment: String = "list of equipment"
//    17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками) (изменяемая публичная, неизвестна до начала мероприятия, нужно прописать то, как будет вычисляться это свободное оборудование)
    var availableEquipment: String = "ist of equipment"
//    18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала) (неизменяемая публичная, но не известна заранее, значит нужна отложенная инициализация, следовательно это var)
    lateinit var mealSchedule: String
//    19. План мероприятий на случай сбоев (неизменяемая, известная заранее, несколько вариантов и нужно добавить логику: if ... else)
    val planB: String ="list of actions in case"
//    20. Список экспертов и жюри (изменяемая публичная , кто-то может заболеть, умереть, не получить визу)
     var expertsList: String = "список имён и фамилий"
//    21. Политика конфиденциальности (еизменяемая  и публичная, константа, всем известна заранее и не изменяется
//    const val policy: String = " private policy"
    val policy: String = " private policy"
//    22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем. (изменяемая приватная, постоянно дополняемая, но должен быть сеттер, который пропишкт, что эти отзывы накапливаются, а не переписываются)
    private var feedback: String = "feedback"
//    23. Текущая температура в помещении (изменяемая публичная)
    var insideTemperature: Double = 24.5
//    24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами (изменяемая приватная, зависит от многих факторов, изменяется в процессе мероприятия)
    private var networkPerformanceData: String = "data"
//    25. Регулятор скорости интернета (понижающий коэффициент, например 0.5) (приватная, изменяемая, зависит от скорости, значит должен быть сеттер)
    private var internetSpeedRegulator: Double = 0.5
//    26. Уровень освещения (изменяемая публичная, зависит от погоды, времени суток)
    var lightLevel: Double = 0.1
//    27. Лог событий мероприятия (приватная, неизменяемая, дополняемая в процессе, значит сеттертбужет)
    private var eventLog: String = "what where when"
//    28. Возможность получения медицинской помощи прямо на мероприятии (да/нет) (неизменяемаяпубличная , известно заранее, булеан)
    val medicalCare: Boolean = true
//    29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.(приватная и неизменяемая, известная заранее)
    private val safetyProtocol: String = "list of things to do"
//    30. Регистрационный номер мероприятия (неизменяемый публичная, даётся сразу)
    val registrationNumber: String = "numbers and letters"
//    31. Максимально допустимый уровень шума в помещении хакатона (неизменяемая публичная, даётся сразу)
    val maxNoiseLevel: Int = 20
//    32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент) (изменяемая переменная, значение булеан и должен быть сеттер, чтобы установить этот уровень: Если уровень выше 10, то....)
    var noiseLevelIndicator: Boolean = false
//    33. План взаимодействия с прессой (изменяемая приватная, даётся сразу но могут вносится изменения в процессе)
    var communicationPlan: String = "list of things"
//    34. Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок. (публичная, изменяемая, компелируется после мероприятия)
    lateinit var teamProjectInfo: String
//    35. Статус получения всех необходимых разрешений для проведения мероприятия (изменяемая)
    var permissionsStatus: String = "ready, not yet"
//    36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию) (изменяемая публичная)
    var specialEquipmentStatus: String = "ready, not yet"
//    37. Список партнеров мероприятия (изменяемая переменная, публичная)
    var partnerList: String = "list of partners"
//    38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия. (неизменяемая, публичная компелируется потом)
    val finalReport: String by lazy {
        "the report"
    }
//    39. Внутренние правила распределения призов (неизменяемая приватная переменная)
    private val rulesOfRewording: String = "list of rules"
//    40. Список разыгрываемых призов (изменяемая переменная)
    var prizesList: String = "list of prizes"
//    41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования (неизменяемая, известная до начала мероприятия)
    private val contactInformation: String = "list of names and numbers"
//    42. Особые условия для участников с ограниченными возможностями (неизменяемая публичная, должна быть известная до начала мероприятия, чтобы желающие знали, смогут ли принять участие)
    val accessibility: String = "описание условий участия"
//    43. Общее настроение участников (определяется опросами) (изменяемая, задаётся значение только после начала мероприятия, постоянно изменяется)
    lateinit var participantsMood: String
//    44. Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач. (изменяемая, но составляется зарание, хотя и инициализируется после того, как известно количество участников)
    lateinit var planOfEvent: String

//    45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.(изменяемая и публичная)
    lateinit var specialGuest: String
//    46. Максимальное количество людей, которое может вместить место проведения (неизменяемая публичная, известна заранее)
    val maxParticipants: Int = 200
//    47. Количество часов, отведенное каждой команде для работы над проектом. (изменяемая, есть ориентировочное значение до начала, но может изменится в зависимости от плана)
    var workingHours: Int = 5;
}